{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#health-ri-semantic-interoperability","title":"Health-RI: Semantic Interoperability","text":"<p>Welcome to the official documentation site for semantic interoperability within the Health-RI ecosystem.</p> <p>This site serves as a central resource for: - Understanding what semantic interoperability is and why it matters, - Learning about ontologies and ontology engineering approaches, - Exploring OntoUML and gUFO, the modeling foundations selected for our efforts, - Documenting the method developed and applied at Health-RI to achieve semantic integration across datasets and systems.</p>"},{"location":"#about-health-ri","title":"About Health-RI","text":"<p>Health-RI is a national initiative in the Netherlands dedicated to building an integrated infrastructure for health and life sciences data. By improving data sharing, reuse, and accessibility, Health-RI aims to empower researchers, clinicians, and policymakers to accelerate data-driven healthcare innovation.</p> <p>Semantic interoperability plays a foundational role in this mission by ensuring that data from diverse sources can be aligned and understood consistently \u2014 not just technically, but conceptually.</p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":"<p>This documentation provides: - Conceptual overviews and definitions, - Practical modeling guidelines, - Descriptions of the Health-RI methodology, - Examples of semantic alignment in real-world use cases.</p> <p>We invite researchers, data stewards, engineers, and anyone working with structured health data to explore this site and contribute to building a more interoperable health data ecosystem.</p>"},{"location":"ontouml-gufo/","title":"OntoUML &amp; gUFO","text":"<p>This section introduces OntoUML and gUFO, two complementary components that form the foundation for ontology-driven conceptual modeling.</p>"},{"location":"ontouml-gufo/#what-you-will-find-here","title":"What You Will Find Here","text":"<ul> <li> <p>OntoUML   An ontologically well-founded modeling language that extends UML with precise distinctions inspired by the Unified Foundational Ontology (UFO). It supports the creation of conceptual models that are semantically rich and logically consistent.</p> </li> <li> <p>gUFO (gentle UFO)   A formal OWL 2 implementation of the core concepts of UFO, designed to support ontology-based data integration, knowledge representation, and semantic interoperability across systems.</p> </li> </ul>"},{"location":"ontouml-gufo/#why-these-tools-matter","title":"Why These Tools Matter","text":"<p>OntoUML and gUFO are used together to bridge the gap between conceptual modeling and semantic technologies. Their combination enables:</p> <ul> <li>More precise communication of domain knowledge</li> <li>Better model validation and reasoning</li> <li>Interoperability across heterogeneous systems</li> </ul> <p>Together, they support the development of models that are not just syntactically valid but also ontologically sound.</p> <p>To explore each in more detail, continue to the dedicated pages:</p> <ul> <li>OntoUML</li> <li>gUFO</li> </ul>"},{"location":"ontouml-gufo/gufo/","title":"gentle UFO (gUFO)","text":"<p>gUFO (gentle Unified Foundational Ontology) is a simplified and lightweight version of the Unified Foundational Ontology (UFO). It was designed to make ontology-driven conceptual modeling more accessible and practical for real-world applications, while preserving the formal rigor of its parent ontology.</p>"},{"location":"ontouml-gufo/gufo/#what-is-gufo","title":"What is gUFO?","text":"<p>gUFO provides a set of foundational building blocks\u2014such as <code>Object</code>, <code>Event</code>, <code>Quality</code>, and <code>Situation</code>\u2014that help structure knowledge in a clear and shared way. These concepts are intended to be reused across different domains, helping organizations align their understanding of data and concepts.</p> <p>Put simply, gUFO is a toolkit for creating consistent and precise representations of meaning.</p>"},{"location":"ontouml-gufo/gufo/#why-was-gufo-created","title":"Why was gUFO created?","text":"<p>UFO is rich and comprehensive, but its complexity can be a barrier for practical adoption. To address this, gUFO was introduced in 2019 as a lightweight version of UFO. It focuses on usability, compatibility with existing tools, and ease of adoption for systems that need formal grounding without the burden of full ontological complexity.</p> <p>The goal was to support knowledge graph creation, semantic data integration, and model interoperability in a more approachable way [2].</p>"},{"location":"ontouml-gufo/gufo/#where-is-gufo-used","title":"Where is gUFO used?","text":"<p>gUFO has found applications in various fields:</p> <ul> <li>Semantic interoperability across organizations and systems</li> <li>Knowledge graphs for structured web data and enterprise data integration</li> <li>Ontology engineering and conceptual modeling in research and industry</li> <li>Linked data and Semantic Web technologies</li> <li>Education, as a stepping stone to foundational ontologies</li> </ul> <p>Its use has been documented in both academic and applied settings across domains such as public health, digital humanities, software engineering, and e-government [5].</p>"},{"location":"ontouml-gufo/gufo/#when-was-gufo-developed","title":"When was gUFO developed?","text":"<p>gUFO was released in 2019 by Jo\u00e3o Paulo A. Almeida, Giancarlo Guizzardi, Tiago Prince Sales, and Ricardo A. Falbo. It is built on more than a decade of research on UFO and its application in ontology-driven conceptual modeling [1].</p>"},{"location":"ontouml-gufo/gufo/#how-does-gufo-work","title":"How does gUFO work?","text":"<p>gUFO is implemented in OWL 2 DL, which means it can be used with standard ontology tools and reasoners. Its key features include:</p> <ul> <li>Reusable core categories grounded in formal ontology</li> <li>Interoperability with tools and linked data ecosystems</li> <li>Simplified structure focused on structural (not behavioral) aspects</li> <li>Extendibility, allowing users to specialize concepts for their domains</li> </ul> <p>This balance between formality and simplicity makes gUFO ideal for organizations aiming to adopt semantic technologies without starting from scratch.</p>"},{"location":"ontouml-gufo/gufo/#references","title":"References","text":"<p> [1] Guizzardi, G. (2005). Ontological foundations for structural conceptual models. [PhD Thesis - Research UT, graduation UT, University of Twente]. Telematica Instituut / CTIT. [Access] [Download]</p> <p> [2] Almeida, J. P. A., Guizzardi, G., Sales, T. P., &amp; Falbo, R. A. (2019). gUFO: A Lightweight Implementation of the Unified Foundational Ontology (UFO). [Access]</p> <p> [3] Guizzardi, G., Wagner, G., Falbo, R. A., Guizzardi, R. S. S., &amp; Almeida, J. P. A. (2013). Towards Ontological Foundations for the Conceptual Modeling of Events. In Conceptual Modeling \u2013 ER 2013 (pp. 327\u2013341). Springer. [DOI]</p> <p> [4] Sales, T. P., Guizzardi, G., Almeida, J. P. A., &amp; Benevides, A. B. (2023). Ontology-Driven Conceptual Modeling with gUFO. In Frontiers in Artificial Intelligence and Applications, 394, 331\u2013336. [Access]</p> <p> [5] Guizzardi, G. (2020). Contributions to Ontology-Driven Conceptual Modeling Theory. [Doctoral Habilitation Thesis, Free University of Bozen-Bolzano]. [Download]</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/","title":"How to Create an OntoUML Model","text":"<p>Creating an OntoUML model requires a modeling tool that supports UML diagrams and can be extended with OntoUML-specific semantics. The recommended approach is to use Visual Paradigm, a widely adopted UML modeling environment that integrates well with the OntoUML ecosystem through the ontouml-vp-plugin.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#step-1-install-visual-paradigm","title":"Step 1: Install Visual Paradigm","text":"<p>Visual Paradigm is a commercial modeling tool, but it offers a Community Edition that is free for non-commercial use, such as academic and personal projects.</p> <ul> <li>Download Visual Paradigm: https://www.visual-paradigm.com/download/</li> <li>More about the free Community Edition: https://www.visual-paradigm.com/download/community.jsp</li> </ul> <p>Once downloaded, follow the standard installation process for your operating system (Windows, macOS, or Linux).</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#step-2-install-the-ontouml-plugin-for-visual-paradigm","title":"Step 2: Install the OntoUML Plugin for Visual Paradigm","text":"<p>To enable OntoUML-specific modeling capabilities, you need to install the ontouml-vp-plugin, which extends Visual Paradigm by introducing OntoUML stereotypes, a dedicated diagram type, and validation features.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#21-download-the-plugin","title":"2.1 Download the Plugin","text":"<p>The plugin is open-source and publicly available on GitHub:</p> <ul> <li>GitHub Repository: https://github.com/OntoUML/ontouml-vp-plugin</li> <li>Releases page (download the <code>.vpplugin</code> file): https://github.com/OntoUML/ontouml-vp-plugin/releases</li> </ul> <p>Always download the most recent release for compatibility with newer versions of Visual Paradigm.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#22-install-the-plugin","title":"2.2 Install the Plugin","text":"<p>To install the plugin:</p> <ol> <li>Open Visual Paradigm.</li> <li>Go to Tools \u2192 Plugins \u2192 Install Plugin.</li> <li>Select the downloaded <code>.vpplugin</code> file.</li> <li>Visual Paradigm will ask you to restart to activate the plugin.</li> </ol> <p>After restarting, you will see the OntoUML extension listed among your installed plugins.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#step-3-create-an-ontouml-diagram","title":"Step 3: Create an OntoUML Diagram","text":"<p>After installation:</p> <ol> <li>Go to Modeling \u2192 New Diagram.</li> <li>Select OntoUML Class Diagram (provided by the plugin).</li> <li>You\u2019ll see a new palette with OntoUML-specific modeling elements like:</li> <li><code>Kind</code>, <code>Quantity</code>, <code>Collective</code>, <code>SubKind</code></li> <li><code>Role</code>, <code>Phase</code>, <code>Category</code>, <code>Mixin</code></li> <li><code>Relator</code>, <code>Event</code>, <code>Mode</code>, and others</li> </ol> <p>These elements are semantically grounded in the Unified Foundational Ontology (UFO) and support ontology-driven conceptual modeling.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#additional-features","title":"Additional Features","text":"<p>The <code>ontouml-vp-plugin</code> also includes:</p> <ul> <li>Model validation: Check whether your model satisfies syntactic constraints of OntoUML.</li> <li>Semantic guidance: Tooltips and palette icons help clarify the purpose of each stereotype.</li> <li>Export options: OntoUML models can be exported for processing or conversion into JSON or RDF using complementary tools.</li> </ul> <p>For more details, refer to the official documentation on GitHub: https://github.com/OntoUML/ontouml-vp-plugin#readme</p> <p>By following these steps, you will have a fully functional environment for developing OntoUML models in a graphical and semantically rich way. This setup is ideal for students, researchers, and practitioners working on ontology-driven conceptual modeling.</p>"},{"location":"ontouml-gufo/ontouml-ufo-catalog/","title":"OntoUML/UFO Catalog","text":"<p>The OntoUML/UFO Catalog is a structured, community-driven repository of real-world models represented using the OntoUML language and grounded in the Unified Foundational Ontology (UFO). It was developed to support empirical research, educational activities, and tool development in ontology-driven conceptual modeling.</p> <p>This catalog provides a curated collection of models across diverse domains\u2014such as law, healthcare, logistics, and cybersecurity\u2014each described with rich metadata detailing its origin, modeling objective, language, domain, and other relevant aspects. By offering standardized, machine-readable formats and persistent identifiers, the catalog promotes reuse, discoverability, and long-term accessibility of high-quality conceptual models.</p>"},{"location":"ontouml-gufo/ontouml-ufo-catalog/#access-and-structure","title":"Access and Structure","text":"<p>The catalog is openly maintained on GitHub at github.com/OntoUML/ontouml-models. Models are provided in multiple formats, including:</p> <ul> <li><code>.json</code>: JSON serialization compliant with the OntoUML Schema</li> <li><code>.ttl</code>: RDF/Turtle files using the OntoUML Vocabulary</li> <li><code>.vpp</code>: Original diagrams in Visual Paradigm format (when available)</li> </ul> <p>Each model is organized in its own folder and includes a set of standardized metadata files (<code>metadata.ttl</code>, <code>metadata-json.ttl</code>, <code>metadata-vpp.ttl</code>, etc.). The catalog as a whole is described by a root <code>catalog.ttl</code> file and validated using SHACL shapes provided under the <code>/shapes</code> directory.</p>"},{"location":"ontouml-gufo/ontouml-ufo-catalog/#directory-structure-overview","title":"Directory Structure Overview","text":"<pre><code>/ontouml-models\n\u251c\u2500\u2500 catalog.ttl\n\u251c\u2500\u2500 /models\n\u2502   \u2514\u2500\u2500 /[model-id]/\n\u2502       \u251c\u2500\u2500 ontology.json\n\u2502       \u251c\u2500\u2500 ontology.ttl\n\u2502       \u251c\u2500\u2500 ontology.vpp\n\u2502       \u251c\u2500\u2500 metadata.ttl\n\u2502       \u251c\u2500\u2500 metadata-json.ttl\n\u2502       \u251c\u2500\u2500 metadata-vpp.ttl\n\u2502       \u251c\u2500\u2500 /original-diagrams/\n\u2502       \u2514\u2500\u2500 /new-diagrams/\n\u251c\u2500\u2500 /shapes\n    \u251c\u2500\u2500 Catalog-shape.ttl\n    \u251c\u2500\u2500 Dataset-shape.ttl\n    \u251c\u2500\u2500 Distribution-shape.ttl\n    \u251c\u2500\u2500 Resource-shape.ttl\n    \u2514\u2500\u2500 SemanticArtefact-shape.ttl\n</code></pre> <p>A public dashboard is available at w3id.org/ontouml-models/dashboard, offering visualizations of the catalog\u2019s contents. Users can explore metadata distributions by year, domain, modeling task, and stereotype usage. As of now, the catalog comprises over 190 datasets, with more than 13.000 classes, 9.000 relations, and hundreds of thousands of RDF triples.</p>"},{"location":"ontouml-gufo/ontouml-ufo-catalog/#catalogs-persistent-urls","title":"Catalog's Persistent URLs","text":"<ul> <li>FDP Catalog page: https://w3id.org/ontouml-models</li> <li>GitHub repository: https://w3id.org/ontouml-models/git</li> <li>Dashboard: https://w3id.org/ontouml-models/dashboard</li> <li>Catalog's latest release: https://w3id.org/ontouml-models/release</li> </ul>"},{"location":"ontouml-gufo/ontouml-ufo-catalog/#peer-reviewed-reference","title":"Peer-Reviewed Reference","text":"<p>The OntoUML/UFO Catalog has been formally described in the following peer-reviewed publication:</p> <p>Prince Sales, T., Barcelos, P. P. F., Fonseca, C. M., Souza, I. V., Romanenko, E., Bernab\u00e9, C. H., Bonino da Silva Santos, L. O., Fumagalli, M., Kritz, J., Almeida, J. P. A., &amp; Guizzardi, G. (2023). A FAIR catalog of ontology-driven conceptual models. Data &amp; Knowledge Engineering, 147, 102210. https://doi.org/10.1016/j.datak.2023.102210. Permanent URL: https://w3id.org/ontouml-models/.</p> <p>This article presents the rationale, structure, and empirical coverage of the catalog and is recommended for citation when using the catalog in research.</p>"},{"location":"ontouml-gufo/ontouml/","title":"OntoUML","text":"<p>OntoUML is an ontologically well-founded language designed for ontology-driven conceptual modeling. It extends the Unified Modeling Language (UML) by incorporating the ontological distinctions provided by the Unified Foundational Ontology (UFO). Through UML\u2019s profiling mechanism, OntoUML defines a collection of class and association stereotypes that reflect the ontological distinctions present in UFO. It also establishes semantically motivated syntactical constraints to ensure that every syntactically correct model represents a sound UFO-based ontology.</p> <p>OntoUML introduced a methodological commitment to ontological analysis, helping modelers make conceptually sound modeling decisions. By aligning UML notation with foundational ontology, OntoUML became a practical and rigorous approach to ontology-driven conceptual modeling [1].</p> <p>Originally developed to make the use of foundational ontology in modeling more accessible and operational, OntoUML plays a central role in applying UFO in practice. The language was engineered to support the creation of high-quality domain models by explicitly encoding ontological distinctions in modeling constructs, enabling a principled approach to identifying and correcting conceptual modeling errors early in the development process [2].</p> <p>Over time, OntoUML evolved beyond a simple UML profile: it became a community-supported ecosystem with formal semantics and tool support. Its precision and ontological grounding have made it especially valuable in complex domains such as healthcare, defense, digital forensics, and enterprise modeling, where ambiguity and conceptual inconsistency can have significant consequences [2].</p>"},{"location":"ontouml-gufo/ontouml/#origins","title":"Origins","text":"<p>The development of OntoUML is rooted in the work of Giancarlo Guizzardi, particularly his Ph.D. thesis titled Ontological Foundations for Structural Conceptual Models [3]. Although the term \u201cOntoUML\u201d was not used in that work, the conceptual basis for the language\u2014its ontological foundations, modeling distinctions, and methodological approach\u2014was thoroughly developed there. Similarly, the ontology that would later be known as the Unified Foundational Ontology (UFO) was introduced in substance, though not yet by name.</p> <p>The formal naming and definition of UFO as a unified foundational ontology appeared in a set of contemporaneous publications by Guizzardi and Wagner [4][5][6]. These works extended the ideas from the thesis and applied them to domains such as agent concepts and business modeling, positioning UFO as a comprehensive foundation for conceptual modeling.</p> <p>OntoUML was conceived as a lightweight UML profile grounded in this ontological foundation, designed to bridge the gap between formal ontology and practical modeling. It provides semantically rich modeling constructs through stereotypes and well-defined constraints that reflect ontological distinctions\u2014such as types, roles, phases, and relators. This ensures that OntoUML models are logically consistent and ontologically expressive, enhancing semantic precision and interoperability.</p>"},{"location":"ontouml-gufo/ontouml/#documentation-and-standardization-efforts","title":"Documentation and Standardization Efforts","text":"<p>Unlike some modeling languages that provide a centralized and formal specification, OntoUML does not have a single, unified source of documentation. Instead, its evolution is driven by academic research, with improvements and extensions typically introduced through peer-reviewed publications.</p> <p>This decentralized development model can pose challenges for newcomers, making the language harder to study and adopt compared to alternatives that offer consolidated reference materials.</p> <p>There are, however, two major online resources that offer learning materials for OntoUML:</p> <ul> <li> <p>The official OntoUML portal: https://ontouml.org/ </p> <p>While this is the main site, much of its content is outdated and has not been maintained in recent years.</p> </li> <li> <p>The documentation project at Read the Docs: https://ontouml.readthedocs.io/en/latest/ </p> <p>This version is more comprehensive and somewhat more recent, but it still contains outdated content and should be read with caution.</p> </li> </ul> <p>Despite their limitations, these resources remain valuable for learning the language. However, users should remain aware of their partial and outdated nature and supplement them with insights from more recent academic publications.</p>"},{"location":"ontouml-gufo/ontouml/#adoption-and-influence","title":"Adoption and Influence","text":"<p>Since its inception, OntoUML has been adopted by various academic, corporate, and governmental institutions worldwide for developing conceptual models across diverse domains. The foundational theories underlying OntoUML have also influenced other conceptual modeling languages, such as ORM 2.0.</p> <p>Several research groups have contributed to the development and dissemination of OntoUML, including:</p> <ul> <li>The Semantics, Cybersecurity &amp; Services (SCS) group at the University of Twente, the Netherlands  </li> <li>The Ontology &amp; Conceptual Modeling Research Group (NEMO) at the Federal University of Esp\u00edrito Santo, Brazil  </li> <li>The KRDB Research Centre for Knowledge-based Artificial Intelligence at the Free University of Bozen-Bolzano, Italy  </li> <li>The Center for Conceptual Modelling and Implementation (CCMi) at the Faculty of Information Technology, Czechia</li> </ul>"},{"location":"ontouml-gufo/ontouml/#supporting-tools-and-developments","title":"Supporting Tools and Developments","text":"<p>The official development of OntoUML tools is hosted on GitHub at https://github.com/OntoUML. These projects are primarily academic efforts, maintained by researchers and contributors from the OntoUML community.</p> <ul> <li>ontouml-js: A JavaScript library for creating, manipulating, and serializing OntoUML models into JSON format compliant with the ontouml-schema.</li> <li>ontouml-json2graph: Transforms OntoUML JSON models into graph representations aligned with the OntoUML Vocabulary, facilitating visualization and semantic analysis.</li> <li>ontouml-metamodel: Provides an implementation-independent metamodel of OntoUML, covering both abstract and concrete syntaxes, serving as a reference for various OntoUML tools.</li> <li>ontouml-models: A collaborative, structured, and open-source catalog of OntoUML and UFO ontology models, supporting empirical research and model sharing. <p>A detailed description of the catalog is provided in the OntoUML/UFO Catalog page.</p> </li> <li>ontouml-models-lib: A Python library designed to access and manage OntoUML models from the OntoUML/UFO Catalog, simplifying software development tasks.</li> <li>ontouml-models-tools: A set of tools for processing and validating OntoUML models, including functionalities for data quality verification and model analysis.</li> <li>ontouml-models-vocabulary: Defines vocabularies to annotate and interlink models within the OntoUML/UFO Catalog, enhancing semantic interoperability.</li> <li>ontouml-schema: Provides a JSON Schema representation for OntoUML models, enabling validation and exchange of models in a standardized format.</li> <li>ontouml-server: A server-side application offering services for OntoUML model management, including storage, conversion, and validation functionalities.</li> <li>ontouml-vocabulary: An OWL vocabulary that formalizes the OntoUML metamodel, supporting the serialization and exchange of OntoUML models as linked data.</li> <li>ontouml-vocabulary-lib: A Python library facilitating the manipulation of OntoUML vocabulary concepts within RDFLib graphs, bridging OntoUML and Semantic Web technologies.</li> <li>ontouml-vp-plugin: A plugin for Visual Paradigm that integrates OntoUML modeling capabilities, allowing users to create and manage OntoUML models within the Visual Paradigm environment.</li> </ul> <p>These tools enhance the usability and applicability of OntoUML across various modeling workflows, supporting both academic exploration and industrial adoption.</p>"},{"location":"ontouml-gufo/ontouml/#references","title":"References","text":"<p>  - [1] Guizzardi, G., Wagner, G., Falbo, R. A., Guizzardi, R. S. S., &amp; Almeida, J. P. A. (2015). OntoUML: A well-founded profile for UML-based conceptual modeling. Applied Ontology, 10(3\u20134), 259\u2013291. https://doi.org/10.3233/AO-150157</p> <p> - [2] Guizzardi, G., Wagner, G., Almeida, J. P. A., Guizzardi, R. S. S., &amp; Sales, T. P. (2022). The Unified Foundational Ontology (UFO): Supercharging modeling with foundational ontologies. Applied Ontology, 17(1), 1\u201344. https://doi.org/10.3233/AO-210256</p> <p> - [3] Guizzardi, G. (2005). Ontological foundations for structural conceptual models [Doctoral dissertation, University of Twente]. Telematica Instituut / CTIT. [Access] [Download]</p> <p> - [4] Guizzardi, G., &amp; Wagner, G. (2004). On the ontological foundations of agent concepts. In Proceedings of the 6th International Bi-Conference Workshop on Agent-Oriented Information Systems (AOIS), held in conjunction with CAiSE 2004, Riga, Latvia.</p> <p> - [5] Guizzardi, G., &amp; Wagner, G. (2005a). Some applications of a unified foundational ontology in business modeling. In T. Bui &amp; A. G. Tjoa (Eds.), Ontologies and business systems analysis. IDEA Group Publishing.</p> <p> - [6] Guizzardi, G., &amp; Wagner, G. (2005b). Towards ontological foundations for agent modeling concepts using UFO. In V. Dignum, M. Dastani, B. Dunin-Ke\u0327plicz, &amp; R. Meyer (Eds.), Agent-Oriented Information Systems II (pp. xx\u2013xx). Lecture Notes in Artificial Intelligence (Vol. 3508). Springer. https://doi.org/10.1007/11538394_6</p> <p> - [7] Sales, T. P., Guizzardi, G., Almeida, J. P. A., &amp; Guizzardi, R. S. S. (2023). The OntoUML/UFO Catalog: A structured repository of real-world ontologies for conceptual modeling research. Journal of Systems and Software, 201, 111645. https://doi.org/10.1016/j.jss.2023.111645</p>"},{"location":"semantic-interoperability/","title":"Semantic Interoperability","text":"<p>Semantic interoperability is a cornerstone of effective data exchange, ensuring that information shared between systems retains its intended meaning. This capability is vital across various sectors, including healthcare, public administration, and the Internet of Things (IoT), facilitating seamless communication and collaboration.</p>"},{"location":"semantic-interoperability/#what-is-semantic-interoperability","title":"What is Semantic Interoperability?","text":"<p>Semantic interoperability refers to the ability of different computer systems to exchange data with unambiguous, shared meaning. Unlike syntactic interoperability, which focuses on the format of data exchange, semantic interoperability ensures that the meaning of the data is preserved and understood consistently across different systems. This is achieved by linking data elements to a common vocabulary or ontology, allowing machines to interpret and process information accurately without human intervention [1][2].</p> <p>A critical challenge that semantic interoperability aims to address is the \"false agreement\" problem, as defined by Nicola Guarino. This problem arises when different agents (e.g., systems or people) use the same term but mean different things, or when they use different terms but mean the same thing. Guarino explains that many current representation languages are ontologically neutral, allowing knowledge engineers to use identical formal structures to represent fundamentally distinct concepts. This neutrality often leads to false agreements\u2014apparent consensus at the syntactic or logical level that masks genuine semantic divergence.</p> <p>To prevent this, semantic interoperability frameworks must explicitly represent ontological commitments, ensuring that shared terms reflect shared understanding [3]. Building on this, Guizzardi adds that interoperability succeeds only when these commitments are not only stated, but also harmonized across systems [11]. Without this alignment, different agents may construct models that appear compatible but actually rely on divergent conceptualizations. As both Guarino and Guizzardi highlight, even when systems use the same vocabulary, they can still misunderstand each other if their ontologies reflect different views of the world. Semantic interoperability must therefore go beyond vocabulary alignment to include agreement on the underlying conceptual structure [4].</p> <p>As Guizzardi explains, every information system necessarily reflects a particular view of reality, whether explicitly or not. That is, it commits to a conceptualization\u2014a theory about what exists and how things are related. Even when developers are unaware of it, their systems make assumptions about the nature of the entities they represent. These assumptions must be clarified and aligned if systems are to interoperate semantically [11].</p>"},{"location":"semantic-interoperability/#why-is-semantic-interoperability-important","title":"Why is Semantic Interoperability Important?","text":"<p>The importance of semantic interoperability lies in its capacity to enable accurate and meaningful data exchange, which is crucial for decision-making, efficiency, and innovation. In healthcare, for instance, it allows for the seamless sharing of patient information across different electronic health record systems, improving patient outcomes and reducing costs. In public services, it supports transparency and collaboration between governmental bodies [5][6]. This need for meaningful data exchange is reflected in the FAIR principles, which highlight Interoperability as one of the four essential pillars of data stewardship [12].</p>"},{"location":"semantic-interoperability/#semantic-interoperability-and-the-i-of-fair","title":"Semantic Interoperability and the \u201cI\u201d of FAIR","text":"<p>The FAIR guiding principles identify Interoperability as a central pillar for maximizing the value of information artifacts [12]. According to Guizzardi, the \u201cI\u201d in FAIR must be understood not just as a technical property, but as a commitment to meaningful, semantically grounded data integration that supports human interoperation mediated by machines [11].</p> <p>The FAIR principles I1\u2013I3 specify that: 1. (meta)data should use a formal, accessible, shared, and broadly applicable language for knowledge representation; 2. (meta)data should rely on vocabularies that themselves follow FAIR principles; 3. (meta)data should include qualified references to other (meta)data.</p> <p>These requirements cannot be fulfilled by mere terminological resources alone. To ensure that systems interpret shared data consistently, vocabularies must be underpinned by ontologies\u2014explicit and formal representations of shared conceptualizations. Guizzardi emphasizes that vocabularies must be ontologically grounded in order to properly support semantic interoperability [11].</p> <p>To achieve this, two levels of support are needed: - Ontologies (in the plural) serve as \u201cmeaning contracts\u201d that clarify the domain-specific conceptualizations shared between systems; - Ontology (as a discipline) provides the formal methods and theories required to build these ontologies correctly and to clarify their commitments.</p> <p>This ontological grounding is essential to ensure that relations between data elements reflect not only their syntactic alignment, but also their real-world semantics, including identity, dependence, and other ontological distinctions.</p> <p>Guizzardi argues that formal ontologies\u2014such as the Unified Foundational Ontology (UFO)\u2014play a key role in satisfying the interoperability requirements of FAIR. Ontology-driven representation languages like OntoUML allow modelers to specify their conceptualizations in a way that is formally constrained, semantically rich, and verifiable. This ontological precision is crucial to prevent the false agreement problem, in which systems appear interoperable at the surface level but interpret the same data differently beneath it.</p> <p>Ultimately, the \u201cI\u201d of FAIR demands more than connectivity and shared syntax. It requires a shared worldview\u2014an agreement not only on the words used, but on the meanings they are intended to convey. As Guizzardi puts it: \u201cNo ontology without Ontology\u201d [11].</p>"},{"location":"semantic-interoperability/#how-is-semantic-interoperability-achieved","title":"How is Semantic Interoperability Achieved?","text":"<p>Achieving semantic interoperability involves several steps:</p> <ol> <li>Standardized Vocabularies and Ontologies: Use of shared terminologies like SNOMED CT, LOINC, or domain-specific ontologies to ensure consistent understanding of data elements [7].</li> <li>Metadata and Annotations: Adding semantic layers to data using RDF, OWL, or JSON-LD to provide context and meaning [8].</li> <li>Mappings and Alignments: Creating links between different vocabularies or datasets to facilitate data integration and interoperability [9].</li> <li>Tools and Platforms: Employing interoperability frameworks, APIs, and knowledge graphs to support seamless data exchange and understanding [10].</li> <li>Ontologically Grounded Languages: Employ modeling languages that help explicitly express the ontological assumptions embedded in data and systems. As Guizzardi argues, it is not enough for representation languages to be formally expressive\u2014they must support users in articulating and verifying the real-world semantics of their models through ontological commitments. OntoUML is one such language\u2014explicitly grounded in the Unified Foundational Ontology (UFO)\u2014that enables semantically rich, internally consistent, and verifiable conceptual modeling [11].</li> </ol> <p>To avoid misinterpretations, Guarino suggests that ontologies should not only define terms but also specify the intended models they aim to capture. In his formal treatment, a conceptualization is a set of intensional relations\u2014abstractions over possible worlds\u2014which logical models only approximate. A well-designed ontology serves as a logical theory that constrains these models to reflect shared meaning, bridging the gap between formal syntax and real-world semantics [4].</p>"},{"location":"semantic-interoperability/#representing-the-semantic-interoperability-problem","title":"Representing the Semantic Interoperability Problem","text":"<p>Semantic interoperability goes beyond shared data formats or common terminologies\u2014it requires that different systems interpret exchanged data in the same way. Achieving this depends on how well each system\u2019s ontology captures the intended meaning of the concepts it uses. The following diagrams illustrate how systems can differ in their approximation of a shared conceptualization, and how these differences impact their ability to interoperate meaningfully.</p> <p> </p> <p>This diagram illustrates how three different systems attempt to represent the same conceptualization\u2014i.e., a shared understanding of the real world\u2014but with varying levels of success. Each system uses a different ontology to constrain its internal model, which leads to differences in how faithfully they capture the intended meaning.</p> <ol> <li> <p>System A (left) represents an ideal case. Its ontology tightly aligns with the intended semantics (green area), neither including extra interpretations nor excluding valid ones. Guarino describes this as a close approximation of the intended models\u2014a highly desirable, though often difficult to achieve, situation for semantic interoperability.</p> </li> <li> <p>System B (center) uses a more permissive ontology. The red dotted region shows unintended models that are logically consistent with System B's formalism but diverge from the intended meaning. According to Guarino, such overgeneralization can lead to false agreement: systems that appear to be interoperable because they use the same vocabulary, but actually interpret the terms differently.</p> </li> <li> <p>System C (right) errs in the opposite direction. Its ontology is too restrictive: the blue striped area represents valid meanings that it fails to account for. This can happen when a system\u2019s constraints are overly narrow or incomplete, leading to the exclusion of necessary interpretations and a loss of information.</p> </li> </ol> <p>As Guarino emphasizes, effective semantic interoperability is not just about using the same terms\u2014it's about ensuring that those terms reflect the same ontological commitments. An ontology must constrain meaning in a way that captures the full range of intended models and excludes unintended ones. When systems fail to do this, misunderstandings arise\u2014even if they use the same syntax.</p> <p>True semantic interoperability, then, demands more than syntactic or logical alignment. It requires a shared worldview\u2014a convergence on what exists, how it can be described, and what interpretations are valid [3][4][11].</p>"},{"location":"semantic-interoperability/#interoperability-between-systems-a-and-b","title":"Interoperability Between Systems A and B","text":"<p>This diagram shows what happens when System A and System B attempt to interoperate. While both aim to represent the same conceptualization (the green area), their ontologies differ significantly in precision.</p> <ul> <li>System A is more accurate: it captures only the intended models and avoids unintended interpretations.</li> <li>System B is broader: it includes the intended models but also admits additional, unintended ones (shown by the red-dotted area).</li> </ul> <p>There is an overlap between their model spaces, which might suggest that interoperability is possible. However, Guarino warns that such overlap can be deceptive. Because System B allows more than System A, their agreement is superficial\u2014they appear to be interoperable, but actually lack a shared understanding.</p> <ul> <li>Cause: A mismatch in ontological commitment. System B\u2019s broadness allows interpretations that System A explicitly excludes.</li> <li>Consequence: Semantic mismatches. Data from System B may be misunderstood or rejected by System A, which interprets those inputs differently\u2014or sees them as invalid altogether.</li> </ul> <p>This scenario exemplifies the false agreement problem: even when systems share data formats and logical structures, they may fail to understand each other if their ontologies do not align [4].</p>"},{"location":"semantic-interoperability/#interoperability-between-systems-b-and-c","title":"Interoperability Between Systems B and C","text":"<p>This case presents an even more problematic scenario: the attempted interoperability between System B and System C, whose ontologies differ in opposite directions.</p> <ul> <li>System B is overly broad. Its ontology admits many unintended models\u2014those that go beyond what the conceptualization requires.</li> <li>System C is too narrow. It fails to include all valid interpretations of the conceptualization, omitting relevant data (as shown in the blue-striped region).</li> </ul> <p>Their shared space\u2014the red overlapping region\u2014includes some models that both systems accept. However, this overlap is misleading. While the systems may agree on certain data structures or schemas, the meanings they assign to them differ.</p> <ul> <li>Cause: The ontologies diverge not only from each other, but also from the intended conceptualization\u2014one being too lax, the other too strict.</li> <li>Consequence: Even when both systems appear to validate a data exchange, they interpret the same data differently, leading to errors, miscommunication, or data loss.</li> </ul> <p>This is another manifestation of the false agreement problem: syntactic compatibility masks semantic divergence. Guarino argues that for semantic interoperability to succeed, systems must align not only in form but in their intended models and the ontological commitments that define them [3][4].</p>"},{"location":"semantic-interoperability/#causes-and-consequences","title":"Causes and Consequences","text":"<ul> <li>Cause: The lack of a shared conceptualization and the absence of a common ontological grounding. System B allows too much; System C allows too little.</li> <li>Consequence: Semantic interoperability fails. The data exchanged may technically conform to both systems' schemas, but the systems draw different conclusions from the same input. This may result in errors, misclassification, data loss, or rejected inputs.</li> </ul> <p>This scenario illustrates why Guarino argues that semantic interoperability requires agreement not just on representation syntax or surface ontologies, but on the deeper conceptual structures and intended models. Without this alignment, even systems that validate data successfully may still fail to understand each other. </p> <p>These examples underscore the importance of designing systems that share not only data but also the underlying conceptual frameworks that give that data meaning. Semantic interoperability is ultimately a matter of shared understanding, not just shared syntax.</p>"},{"location":"semantic-interoperability/#learn-more","title":"Learn More","text":"<ul> <li>SEMIC - EU Semantic Interoperability Community</li> <li>FHIR - Fast Healthcare Interoperability Resources</li> <li>Open Biological and Biomedical Ontology (OBO) Foundry</li> <li>ISA - Interoperability Solutions for European Public Administrations</li> </ul>"},{"location":"semantic-interoperability/#references","title":"References","text":"<p> - [1] Semantic interoperability. Wikipedia. Retrieved from: https://en.wikipedia.org/wiki/Semantic_interoperability</p> <p> - [2] What is semantic interoperability? Wolters Kluwer. Retrieved from: https://www.wolterskluwer.com/en/expert-insights/what-is-semantic-interoperability</p> <p> - [3] Guarino, N. (2009). The Ontological Level: Revisiting 30 Years of Knowledge Representation. In: Borgida, A.T. et al. (Eds.), Mylopoulos Festschrift, LNCS 5600, pp. 52\u201367. Springer. https://doi.org/10.1007/978-3-642-01907-4_6</p> <p> - [4] Guarino, N. (1998). Formal Ontology and Information Systems. In: N. Guarino (ed.), FOIS\u201998, IOS Press, pp. 3\u201315. https://www.researchgate.net/publication/272169039_Formal_Ontology_and_Information_Systems</p> <p> - [5] Interoperability: unifying and maximising data reuse within digital education ecosystems. OECD. Retrieved from: https://www.oecd.org/en/publications/oecd-digital-education-outlook-2023_c74f03de-en/full-report/interoperability-unifying-and-maximising-data-reuse-within-digital-education-ecosystems_660f8da1.html</p> <p> - [6] Importance of Semantic Interoperability in Public Health Surveillance. SSG. Retrieved from: https://www.ssg-llc.com/semantic-interoperability-importance-of-interoperability-in-public-health/</p> <p> - [7] Aligning Semantic Interoperability Frameworks with the FOXS Stack. PubMed. Retrieved from: https://pubmed.ncbi.nlm.nih.gov/36473495/</p> <p> - [8] Achieving Semantic Interoperability Using RDF and OWL. W3C. Retrieved from: https://www.w3.org/2001/sw/BestPractices/OEP/SemInt/</p> <p> - [9] Suggestions for extending the FAIR Principles based on a linguistic perspective on semantic interoperability. Nature Scientific Data. Retrieved from: https://www.nature.com/articles/s41597-025-05011-x</p> <p> - [10] FAIR Semantics, Interoperability, and Services. FAIRsFAIR. Retrieved from: https://www.fairsfair.eu/fair-semantics-interoperability-and-services-0</p> <p> - [11] Guizzardi, G. (2020). Ontology, Ontologies and the \u201cI\u201d of FAIR. Data Intelligence, 2(1\u20132), 181\u2013191. https://doi.org/10.1162/dint_a_00040</p> <p> - [12] Wilkinson, M. D., Dumontier, M., Aalbersberg, I. J., Appleton, G., Axton, M., Baak, A., et al. (2016). The FAIR Guiding Principles for scientific data management and stewardship. Scientific Data, 3, 160018. https://doi.org/10.1038/sdata.2016.18</p>"}]}