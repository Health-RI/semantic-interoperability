{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#health-ri-semantic-interoperability","title":"Health-RI: Semantic Interoperability","text":"<p>Welcome to the official documentation site for semantic interoperability within the Health-RI ecosystem.</p> <p>This site serves as a central resource for: - Understanding what semantic interoperability is and why it matters, - Learning about ontologies and ontology engineering approaches, - Exploring OntoUML and gUFO, the modeling foundations selected for our efforts, - Documenting the method developed and applied at Health-RI to achieve semantic integration across datasets and systems.</p>"},{"location":"#about-health-ri","title":"About Health-RI","text":"<p>Health-RI is a national initiative in the Netherlands dedicated to building an integrated infrastructure for health and life sciences data. By improving data sharing, reuse, and accessibility, Health-RI aims to empower researchers, clinicians, and policymakers to accelerate data-driven healthcare innovation.</p> <p>Semantic interoperability plays a foundational role in this mission by ensuring that data from diverse sources can be aligned and understood consistently \u2014 not just technically, but conceptually.</p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":"<p>This documentation provides: - Conceptual overviews and definitions, - Practical modeling guidelines, - Descriptions of the Health-RI methodology, - Examples of semantic alignment in real-world use cases.</p> <p>We invite researchers, data stewards, engineers, and anyone working with structured health data to explore this site and contribute to building a more interoperable health data ecosystem.</p>"},{"location":"ontouml-gufo/","title":"OntoUML &amp; gUFO","text":"<p>This section introduces OntoUML and gUFO, two complementary components that form the foundation for ontology-driven conceptual modeling.</p>"},{"location":"ontouml-gufo/#what-you-will-find-here","title":"What You Will Find Here","text":"<ul> <li> <p>OntoUML   An ontologically well-founded modeling language that extends UML with precise distinctions inspired by the Unified Foundational Ontology (UFO). It supports the creation of conceptual models that are semantically rich and logically consistent.</p> </li> <li> <p>gUFO (gentle UFO)   A formal OWL 2 implementation of the core concepts of UFO, designed to support ontology-based data integration, knowledge representation, and semantic interoperability across systems.</p> </li> </ul>"},{"location":"ontouml-gufo/#why-these-tools-matter","title":"Why These Tools Matter","text":"<p>OntoUML and gUFO are used together to bridge the gap between conceptual modeling and semantic technologies. Their combination enables:</p> <ul> <li>More precise communication of domain knowledge</li> <li>Better model validation and reasoning</li> <li>Interoperability across heterogeneous systems</li> </ul> <p>Together, they support the development of models that are not just syntactically valid but also ontologically sound.</p> <p>To explore each in more detail, continue to the dedicated pages:</p> <ul> <li>OntoUML</li> <li>gUFO</li> </ul>"},{"location":"ontouml-gufo/gufo/","title":"gentle UFO (gUFO)","text":"<p>gUFO (gentle Unified Foundational Ontology) is a simplified and lightweight version of the Unified Foundational Ontology (UFO). It was designed to make ontology-driven conceptual modeling more accessible and practical for real-world applications, while preserving the formal rigor of its parent ontology.</p>"},{"location":"ontouml-gufo/gufo/#what-is-gufo","title":"What is gUFO?","text":"<p>gUFO provides a set of foundational building blocks\u2014such as <code>Object</code>, <code>Event</code>, <code>Quality</code>, and <code>Situation</code>\u2014that help structure knowledge in a clear and shared way. These concepts are intended to be reused across different domains, helping organizations align their understanding of data and concepts.</p> <p>Put simply, gUFO is a toolkit for creating consistent and precise representations of meaning.</p>"},{"location":"ontouml-gufo/gufo/#why-was-gufo-created","title":"Why was gUFO created?","text":"<p>UFO is rich and comprehensive, but its complexity can be a barrier for practical adoption. To address this, gUFO was introduced in 2019 as a lightweight version of UFO. It focuses on usability, compatibility with existing tools, and ease of adoption for systems that need formal grounding without the burden of full ontological complexity.</p> <p>The goal was to support knowledge graph creation, semantic data integration, and model interoperability in a more approachable way [2].</p>"},{"location":"ontouml-gufo/gufo/#where-is-gufo-used","title":"Where is gUFO used?","text":"<p>gUFO has found applications in various fields:</p> <ul> <li>Semantic interoperability across organizations and systems</li> <li>Knowledge graphs for structured web data and enterprise data integration</li> <li>Ontology engineering and conceptual modeling in research and industry</li> <li>Linked data and Semantic Web technologies</li> <li>Education, as a stepping stone to foundational ontologies</li> </ul> <p>Its use has been documented in both academic and applied settings across domains such as public health, digital humanities, software engineering, and e-government [5].</p>"},{"location":"ontouml-gufo/gufo/#when-was-gufo-developed","title":"When was gUFO developed?","text":"<p>gUFO was released in 2019 by Jo\u00e3o Paulo A. Almeida, Giancarlo Guizzardi, Tiago Prince Sales, and Ricardo A. Falbo. It is built on more than a decade of research on UFO and its application in ontology-driven conceptual modeling [1].</p>"},{"location":"ontouml-gufo/gufo/#how-does-gufo-work","title":"How does gUFO work?","text":"<p>gUFO is implemented in OWL 2 DL, which means it can be used with standard ontology tools and reasoners. Its key features include:</p> <ul> <li>Reusable core categories grounded in formal ontology</li> <li>Interoperability with tools and linked data ecosystems</li> <li>Simplified structure focused on structural (not behavioral) aspects</li> <li>Extendibility, allowing users to specialize concepts for their domains</li> </ul> <p>This balance between formality and simplicity makes gUFO ideal for organizations aiming to adopt semantic technologies without starting from scratch.</p>"},{"location":"ontouml-gufo/gufo/#references","title":"References","text":"<p> [1] Guizzardi, G. (2005). Ontological foundations for structural conceptual models. [PhD Thesis - Research UT, graduation UT, University of Twente]. Telematica Instituut / CTIT. [Access] [Download]</p> <p> [2] Almeida, J. P. A., Guizzardi, G., Sales, T. P., &amp; Falbo, R. A. (2019). gUFO: A Lightweight Implementation of the Unified Foundational Ontology (UFO). [Access]</p> <p> [3] Guizzardi, G., Wagner, G., Falbo, R. A., Guizzardi, R. S. S., &amp; Almeida, J. P. A. (2013). Towards Ontological Foundations for the Conceptual Modeling of Events. In Conceptual Modeling \u2013 ER 2013 (pp. 327\u2013341). Springer. [DOI]</p> <p> [4] Sales, T. P., Guizzardi, G., Almeida, J. P. A., &amp; Benevides, A. B. (2023). Ontology-Driven Conceptual Modeling with gUFO. In Frontiers in Artificial Intelligence and Applications, 394, 331\u2013336. [Access]</p> <p> [5] Guizzardi, G. (2020). Contributions to Ontology-Driven Conceptual Modeling Theory. [Doctoral Habilitation Thesis, Free University of Bozen-Bolzano]. [Download]</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/","title":"How to Create an OntoUML Model","text":"<p>Creating an OntoUML model requires a modeling tool that supports UML diagrams and can be extended with OntoUML-specific semantics. The recommended approach is to use Visual Paradigm, a widely adopted UML modeling environment that integrates well with the OntoUML ecosystem through the ontouml-vp-plugin.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#step-1-install-visual-paradigm","title":"Step 1: Install Visual Paradigm","text":"<p>Visual Paradigm is a commercial modeling tool, but it offers a Community Edition that is free for non-commercial use, such as academic and personal projects.</p> <ul> <li>Download Visual Paradigm: https://www.visual-paradigm.com/download/</li> <li>More about the free Community Edition: https://www.visual-paradigm.com/download/community.jsp</li> </ul> <p>Once downloaded, follow the standard installation process for your operating system (Windows, macOS, or Linux).</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#step-2-install-the-ontouml-plugin-for-visual-paradigm","title":"Step 2: Install the OntoUML Plugin for Visual Paradigm","text":"<p>To enable OntoUML-specific modeling capabilities, you need to install the ontouml-vp-plugin, which extends Visual Paradigm by introducing OntoUML stereotypes, a dedicated diagram type, and validation features.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#21-download-the-plugin","title":"2.1 Download the Plugin","text":"<p>The plugin is open-source and publicly available on GitHub:</p> <ul> <li>GitHub Repository: https://github.com/OntoUML/ontouml-vp-plugin</li> <li>Releases page (download the <code>.vpplugin</code> file): https://github.com/OntoUML/ontouml-vp-plugin/releases</li> </ul> <p>Always download the most recent release for compatibility with newer versions of Visual Paradigm.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#22-install-the-plugin","title":"2.2 Install the Plugin","text":"<p>To install the plugin:</p> <ol> <li>Open Visual Paradigm.</li> <li>Go to Tools \u2192 Plugins \u2192 Install Plugin.</li> <li>Select the downloaded <code>.vpplugin</code> file.</li> <li>Visual Paradigm will ask you to restart to activate the plugin.</li> </ol> <p>After restarting, you will see the OntoUML extension listed among your installed plugins.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#step-3-create-an-ontouml-diagram","title":"Step 3: Create an OntoUML Diagram","text":"<p>After installation:</p> <ol> <li>Go to Modeling \u2192 New Diagram.</li> <li>Select OntoUML Class Diagram (provided by the plugin).</li> <li>You\u2019ll see a new palette with OntoUML-specific modeling elements like:</li> <li><code>Kind</code>, <code>Quantity</code>, <code>Collective</code>, <code>SubKind</code></li> <li><code>Role</code>, <code>Phase</code>, <code>Category</code>, <code>Mixin</code></li> <li><code>Relator</code>, <code>Event</code>, <code>Mode</code>, and others</li> </ol> <p>These elements are semantically grounded in the Unified Foundational Ontology (UFO) and support ontology-driven conceptual modeling.</p>"},{"location":"ontouml-gufo/how-to-create-ontouml-model/#additional-features","title":"Additional Features","text":"<p>The <code>ontouml-vp-plugin</code> also includes:</p> <ul> <li>Model validation: Check whether your model satisfies syntactic constraints of OntoUML.</li> <li>Semantic guidance: Tooltips and palette icons help clarify the purpose of each stereotype.</li> <li>Export options: OntoUML models can be exported for processing or conversion into JSON or RDF using complementary tools.</li> </ul> <p>For more details, refer to the official documentation on GitHub: https://github.com/OntoUML/ontouml-vp-plugin#readme</p> <p>By following these steps, you will have a fully functional environment for developing OntoUML models in a graphical and semantically rich way. This setup is ideal for students, researchers, and practitioners working on ontology-driven conceptual modeling.</p>"},{"location":"ontouml-gufo/ontouml/","title":"OntoUML","text":"<p>OntoUML is an ontologically well-founded language designed for ontology-driven conceptual modeling. It extends the Unified Modeling Language (UML) by incorporating the ontological distinctions provided by the Unified Foundational Ontology (UFO). Through UML\u2019s profiling mechanism, OntoUML defines a collection of class and association stereotypes that reflect the ontological distinctions present in UFO. It also establishes semantically motivated syntactical constraints to ensure that every syntactically correct model represents a sound UFO-based ontology.</p> <p>OntoUML introduced a methodological commitment to ontological analysis, helping modelers make conceptually sound modeling decisions. By aligning UML notation with foundational ontology, OntoUML became a practical and rigorous approach to ontology-driven conceptual modeling [1].</p> <p>Originally developed to make the use of foundational ontology in modeling more accessible and operational, OntoUML plays a central role in applying UFO in practice. The language was engineered to support the creation of high-quality domain models by explicitly encoding ontological distinctions in modeling constructs, enabling a principled approach to identifying and correcting conceptual modeling errors early in the development process [2].</p> <p>Over time, OntoUML evolved beyond a simple UML profile: it became a community-supported ecosystem with formal semantics and tool support. Its precision and ontological grounding have made it especially valuable in complex domains such as healthcare, defense, digital forensics, and enterprise modeling, where ambiguity and conceptual inconsistency can have significant consequences [2].</p>"},{"location":"ontouml-gufo/ontouml/#origins","title":"Origins","text":"<p>The development of OntoUML is rooted in the work of Giancarlo Guizzardi, particularly his Ph.D. thesis titled Ontological Foundations for Structural Conceptual Models [3]. Although the term \u201cOntoUML\u201d was not used in that work, the conceptual basis for the language\u2014its ontological foundations, modeling distinctions, and methodological approach\u2014was thoroughly developed there. Similarly, the ontology that would later be known as the Unified Foundational Ontology (UFO) was introduced in substance, though not yet by name.</p> <p>The formal naming and definition of UFO as a unified foundational ontology appeared in a set of contemporaneous publications by Guizzardi and Wagner [4][5][6]. These works extended the ideas from the thesis and applied them to domains such as agent concepts and business modeling, positioning UFO as a comprehensive foundation for conceptual modeling.</p> <p>OntoUML was conceived as a lightweight UML profile grounded in this ontological foundation, designed to bridge the gap between formal ontology and practical modeling. It provides semantically rich modeling constructs through stereotypes and well-defined constraints that reflect ontological distinctions\u2014such as types, roles, phases, and relators. This ensures that OntoUML models are logically consistent and ontologically expressive, enhancing semantic precision and interoperability.</p>"},{"location":"ontouml-gufo/ontouml/#documentation-and-standardization-efforts","title":"Documentation and Standardization Efforts","text":"<p>Unlike some modeling languages that provide a centralized and formal specification, OntoUML does not have a single, unified source of documentation. Instead, its evolution is driven by academic research, with improvements and extensions typically introduced through peer-reviewed publications.</p> <p>This decentralized development model can pose challenges for newcomers, making the language harder to study and adopt compared to alternatives that offer consolidated reference materials.</p> <p>There are, however, two major online resources that offer learning materials for OntoUML:</p> <ul> <li> <p>The official OntoUML portal: https://ontouml.org/ </p> <p>While this is the main site, much of its content is outdated and has not been maintained in recent years.</p> </li> <li> <p>The documentation project at Read the Docs: https://ontouml.readthedocs.io/en/latest/ </p> <p>This version is more comprehensive and somewhat more recent, but it still contains outdated content and should be read with caution.</p> </li> </ul> <p>Despite their limitations, these resources remain valuable for learning the language. However, users should remain aware of their partial and outdated nature and supplement them with insights from more recent academic publications.</p>"},{"location":"ontouml-gufo/ontouml/#adoption-and-influence","title":"Adoption and Influence","text":"<p>Since its inception, OntoUML has been adopted by various academic, corporate, and governmental institutions worldwide for developing conceptual models across diverse domains. The foundational theories underlying OntoUML have also influenced other conceptual modeling languages, such as ORM 2.0.</p> <p>Several research groups have contributed to the development and dissemination of OntoUML, including:</p> <ul> <li>The Semantics, Cybersecurity &amp; Services (SCS) group at the University of Twente, the Netherlands  </li> <li>The Ontology &amp; Conceptual Modeling Research Group (NEMO) at the Federal University of Esp\u00edrito Santo, Brazil  </li> <li>The KRDB Research Centre for Knowledge-based Artificial Intelligence at the Free University of Bozen-Bolzano, Italy  </li> <li>The Center for Conceptual Modelling and Implementation (CCMi) at the Faculty of Information Technology, Czechia</li> </ul>"},{"location":"ontouml-gufo/ontouml/#supporting-tools-and-developments","title":"Supporting Tools and Developments","text":"<p>The official development of OntoUML tools is hosted on GitHub at https://github.com/OntoUML. These projects are primarily academic efforts, maintained by researchers and contributors from the OntoUML community.</p> <ul> <li>ontouml-js: A JavaScript library for creating, manipulating, and serializing OntoUML models into JSON format compliant with the ontouml-schema.</li> <li>ontouml-json2graph: Transforms OntoUML JSON models into graph representations aligned with the OntoUML Vocabulary, facilitating visualization and semantic analysis.</li> <li>ontouml-metamodel: Provides an implementation-independent metamodel of OntoUML, covering both abstract and concrete syntaxes, serving as a reference for various OntoUML tools.</li> <li>ontouml-models: A collaborative, structured, and open-source catalog of OntoUML and UFO ontology models, supporting empirical research and model sharing.</li> <li>ontouml-models-lib: A Python library designed to access and manage OntoUML models from the OntoUML/UFO Catalog, simplifying software development tasks.</li> <li>ontouml-models-tools: A set of tools for processing and validating OntoUML models, including functionalities for data quality verification and model analysis.</li> <li>ontouml-models-vocabulary: Defines vocabularies to annotate and interlink models within the OntoUML/UFO Catalog, enhancing semantic interoperability.</li> <li>ontouml-schema: Provides a JSON Schema representation for OntoUML models, enabling validation and exchange of models in a standardized format.</li> <li>ontouml-server: A server-side application offering services for OntoUML model management, including storage, conversion, and validation functionalities.</li> <li>ontouml-vocabulary: An OWL vocabulary that formalizes the OntoUML metamodel, supporting the serialization and exchange of OntoUML models as linked data.</li> <li>ontouml-vocabulary-lib: A Python library facilitating the manipulation of OntoUML vocabulary concepts within RDFLib graphs, bridging OntoUML and Semantic Web technologies.</li> <li>ontouml-vp-plugin: A plugin for Visual Paradigm that integrates OntoUML modeling capabilities, allowing users to create and manage OntoUML models within the Visual Paradigm environment.</li> </ul> <p>These tools enhance the usability and applicability of OntoUML across various modeling workflows, supporting both academic exploration and industrial adoption.</p>"},{"location":"ontouml-gufo/ontouml/#ontoumlufo-catalog","title":"OntoUML/UFO Catalog","text":"<p>The OntoUML/UFO Catalog is a structured, community-driven repository of real-world OntoUML models, developed with the goal of supporting research, education, and tool development in conceptual modeling. It provides a curated collection of ontologies from various domains\u2014ranging from law and healthcare to logistics and cybersecurity\u2014all represented using OntoUML and grounded in the Unified Foundational Ontology (UFO). Each model is accompanied by metadata that documents its origin, purpose, and scope, facilitating discoverability and reuse.</p> <p>Designed as an open and extensible initiative, the catalog is maintained on GitHub (OntoUML Models Repository) and promotes collaborative contributions from the broader community. It has proven to be an essential resource for empirical studies and validation of modeling tools and techniques. A peer-reviewed study has also systematically documented the catalog\u2019s structure, evolution, and coverage, highlighting its value for both researchers and practitioners [7].</p>"},{"location":"ontouml-gufo/ontouml/#references","title":"References","text":"<p>  - [1] Guizzardi, G., Wagner, G., Falbo, R. A., Guizzardi, R. S. S., &amp; Almeida, J. P. A. (2015). OntoUML: A well-founded profile for UML-based conceptual modeling. Applied Ontology, 10(3\u20134), 259\u2013291. https://doi.org/10.3233/AO-150157</p> <p> - [2] Guizzardi, G., Wagner, G., Almeida, J. P. A., Guizzardi, R. S. S., &amp; Sales, T. P. (2022). The Unified Foundational Ontology (UFO): Supercharging modeling with foundational ontologies. Applied Ontology, 17(1), 1\u201344. https://doi.org/10.3233/AO-210256</p> <p> - [3] Guizzardi, G. (2005). Ontological foundations for structural conceptual models [Doctoral dissertation, University of Twente]. Telematica Instituut / CTIT. [Access] [Download]</p> <p> - [4] Guizzardi, G., &amp; Wagner, G. (2004). On the ontological foundations of agent concepts. In Proceedings of the 6th International Bi-Conference Workshop on Agent-Oriented Information Systems (AOIS), held in conjunction with CAiSE 2004, Riga, Latvia.</p> <p> - [5] Guizzardi, G., &amp; Wagner, G. (2005a). Some applications of a unified foundational ontology in business modeling. In T. Bui &amp; A. G. Tjoa (Eds.), Ontologies and business systems analysis. IDEA Group Publishing.</p> <p> - [6] Guizzardi, G., &amp; Wagner, G. (2005b). Towards ontological foundations for agent modeling concepts using UFO. In V. Dignum, M. Dastani, B. Dunin-Ke\u0327plicz, &amp; R. Meyer (Eds.), Agent-Oriented Information Systems II (pp. xx\u2013xx). Lecture Notes in Artificial Intelligence (Vol. 3508). Springer. https://doi.org/10.1007/11538394_6</p> <p> - [7] Sales, T. P., Guizzardi, G., Almeida, J. P. A., &amp; Guizzardi, R. S. S. (2023). The OntoUML/UFO Catalog: A structured repository of real-world ontologies for conceptual modeling research. Journal of Systems and Software, 201, 111645. https://doi.org/10.1016/j.jss.2023.111645</p>"}]}