name: Deploy MkDocs site to GitHub Pages

# Run for:
# - pushes to main (build, then commit generated files and deploy)
# - pull requests into main (build and validate only; no commits/deploys)
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

# Default least-privilege; PRs only need read
permissions:
  contents: read

jobs:
  build:
    name: Build & validate (PRs and main)
    runs-on: ubuntu-latest
    steps:
      # --- Checkout repo files so we can build & run scripts ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Install Python with pip cache for faster subsequent runs ---
      - name: Set up Python 3.x with pip cache
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'
          cache: pip
          cache-dependency-path: scripts/requirements.txt

      # --- Install all required Python packages for docs & tooling ---
      - name: Install Python dependencies
        run: pip install -r scripts/requirements.txt

      # --- Clean up repo-specific detritus before generating docs ---
      - name: Clean unwanted files
        run: python scripts/clean_unwanted_files.py

      # --- Ensure ontology metadata is present/updated (gUFO file) ---
      - name: Ensure metadata is added to gUFO file
        run: python scripts/insert-metadata.py

      # --- Promote newest versioned files into 'latest' folder ---
      - name: Move newest files from versioned to latest
        run: python scripts/move-latest.py

      # --- Copy ontology changelog into docs so it appears on site ---
      - name: Copy ontology changelog into docs
        run: |
          mkdir -p docs/ontology
          cp ontologies/changelog-ontology.md docs/ontology/changelog-ontology.md

      # --- Refresh images in docs from latest ontology assets ---
      - name: Replace ontology images in docs with latest
        run: |
          rm -rf docs/ontology/assets/images/*
          cp -r ontologies/latest/images/* docs/ontology/assets/images/

      # --- Generate OntoUML documentation (custom script) ---
      - name: Generate OntoUML documentation
        run: python scripts/ontouml-docgen.py

      # --- Generate PyLODE HTML specs for ontology and vocabulary ---
      - name: Generate PyLODE specifications
        run: python scripts/pylode-docgen.py

      # --- Convert SSSOM TSV to TTL (kept in repo + used in site) ---
      - name: Create TTL serialization of SSSOM TSV
        run: python scripts/sssom-tsv2ttl.py

      # --- Include SSSOM TSV in built site (docs static assets) ---
      - name: Copy SSSOM TSV into docs assets
        run: |
          mkdir -p docs/ontology/assets
          cp mappings/health-ri-mappings.tsv docs/ontology/assets/health-ri-mappings.tsv

      # --- Remove comments from public copy of TSV in docs assets ---
      - name: Strip commented lines from public TSV copy
        run: sed -i '/^#/d' docs/ontology/assets/health-ri-mappings.tsv

      # --- Validate MkDocs config before full build (fast fail) ---
      - name: Validate MkDocs configuration
        run: mkdocs build --verbose --clean --site-dir /tmp/mkdocs-check

      # --- Build MkDocs site into ./site ---
      - name: Build MkDocs site
        run: mkdocs build

      # --- Check internal links (ignore ephemeral hash-like URLs) ---
      - name: Check links in built site
        run: |
          linkchecker ./site \
            --no-status \
            --ignore-url="site/ontology/n[0-9a-f]{32,}"

      # --- Upload built site as artifact for deploy job ---
      - name: Upload built site artifact
        uses: actions/upload-artifact@v4
        with:
            name: site
            path: site
            retention-days: 7

      # --- Upload generated content that should be committed on main ---
      - name: Upload generated content artifact (to commit on main)
        uses: actions/upload-artifact@v4
        with:
          name: generated
          path: |
            ontologies/versioned/**
            ontologies/latest/**
            vocabulary/versioned/**
            vocabulary/latest/**
            mappings/**
            docs/ontology/assets/health-ri-mappings.tsv
          retention-days: 7

  deploy:
    name: Commit generated files & publish (main only)
    needs: build
    runs-on: ubuntu-latest

    # Only run on direct pushes to main (not PRs)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Needs write permission to commit and push changes
    permissions:
      contents: write

    steps:
      # --- Checkout latest main so we can commit generated files ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Retrieve generated files produced by the build job ---
      - name: Download generated content artifact
        uses: actions/download-artifact@v4
        with:
          name: generated
          path: .

      # --- Retrieve the already-built site folder ---
      - name: Download built site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: ./site

      # --- Commit any changes from generation (idempotent) ---
      - name: Commit and push generated files (if there are changes)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          shopt -s globstar
          git add ontologies/versioned/** ontologies/latest/** || true
          git add vocabulary/versioned/** vocabulary/latest/** || true
          git add mappings/** || true
          git add docs/ontology/assets/health-ri-mappings.tsv || true
          git diff --cached --quiet || git commit -m "docs: update generated documentation and specifications"
          git push origin main

      # --- Publish the built site to GitHub Pages from ./site ---
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
